Tensor flow for deep learning

Introduction:  
Machine learning overview: 

machine learning algorithm are different from typical computer programs they find an insight in a bunch of data with 

supervised Learning: uses labeled data to predict a label given some features, this method trains model based on a historical data that already labeled
- classification: categorical features (gender prediction)
- Regression : continuous features (House price) , create some fit (a model) to the data

But what if we don’t have labels?
Unsupervised Learning: looking for a pattern in the data and find the structure
 - clustering: group data in similar groups and then the data scientist will intrerpret each cluster


Reinforcement Learning: 
when a computer learn to play a video or drive a car! Works through trial and error which actions yield the greatest reward

Components: 
- Agent: Learnin/Decision Maker (Learn how to drive a car, how to play a video game)
- Environment: what agent interact with (streets, signs, actual pixels on the screen that agent can read)
- Action: what agent can do (what button to press, brake)
the agent chooses actions that maximize some specified reward over a time, learn the best policy with the environmnet and going to respond with the best action
 repond 

How a supervised ML process look like: 
1- Acquire the data (depends on the task)
2- clean/organise data (take a really long time to train whole data) , normalising, take away some of them
3- split data to train(70%)  and test(30%)
4- Train model on training data (tensorflow and neural network)
5- Evaluate model on test set (on a data that has never seen before)
6- Adjust model parameters (cycle back and forth)
7- train again

How an unsupervised ML process: (not going to have test train split because we don’t know the correct labels to evaluate against)
we just use all the data as training data and evaluate agianst the training base on some evaluation metrics 

Holdout Sets: 
after we clean the data, we’ll split it to train, test and holdout set. There are no right ot wrong answer on what the ration should be between those three sets as far as their sizes are. 
After we train or model and evaluate it on test set, tune hyperparameters based on test set and then once we are ready to deploy our model, we have our hold out dataset. The purpose of holdout set is that to see howl well our model performed on a dataset that it hasn’t been tested on or even adjusted. So we can have a true sense of th metric that we can expect in a real world setting.


Model Evaluation: 

Supervised Learning- Classification: 
Accuracy, Recall, Precision 

Supervised Learning- Regression: 
MAE, MSE, RMSE : all measurments are of: on average how far off are we from the correct continuos value

Unsupervised Learning: 
We never have the correct labels to compare to but we can use thing like cluster homogenity or Ranh Index to evaluate our model. Depends on the goal of the task.
Un supervised learning clustering and its evaluation are very hard problems. 

Reinforcement Learning: 
 usually a lot more obvious since that evaluation or reward metric is actually built into the actual training of the model. Typically how well the mpdel [perform against the task it’s assigned. That particular score in a video game, etc. 
